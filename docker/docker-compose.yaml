version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: documents
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      retries: 5
      timeout: 5s
      start_period: 5s

  minio:
    image: 'bitnami/minio:latest'
    environment:
      - MINIO_DEFAULT_BUCKETS=documents
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
    ports:
      - '9000:9000'
      - '9001:9001'
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - documents_minio_data:/bitnami/minio/data

  golang:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: golang_app
    depends_on:
      - postgres
      - minio
    env_file:
      - ../.env
    environment:
      DATABASE_URL: postgres://postgres:password@postgres:5432/documents?sslmode=disable
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password
      MINIO_BUCKET: documents
    ports:
      - "8080:8080"
    restart: unless-stopped

volumes:
  postgres:
  documents_minio_data: